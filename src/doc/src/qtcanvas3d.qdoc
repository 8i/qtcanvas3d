/****************************************************************************
**
** Copyright (C) 2015 The Qt Company Ltd.
** Contact: http://www.qt.io/licensing/
**
** This file is part of the QtCanvas3D module of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:LGPL21$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see http://www.qt.io/terms-conditions. For further
** information use the contact form at http://www.qt.io/contact-us.
**
** GNU Lesser General Public License Usage
** Alternatively, this file may be used under the terms of the GNU Lesser
** General Public License version 2.1 or version 3 as published by the Free
** Software Foundation and appearing in the file LICENSE.LGPLv21 and
** LICENSE.LGPLv3 included in the packaging of this file. Please review the
** following information to ensure the GNU Lesser General Public License
** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** As a special exception, The Qt Company gives you certain additional
** rights. These rights are described in The Qt Company LGPL Exception
** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \qmlmodule QtCanvas3D 1.0
    \title QtCanvas3D QML Types
    \ingroup qmlmodules

    \brief QML types for the QtCanvas3D API.

    The QtCanvas3D functionality can be accessed via these QML types.

    \section1 QML Types

    \annotatedlist qtcanvas3d-qml-types
*/

/*!
    \group qtcanvas3d-examples
    \ingroup all-examples
    \title QtCanvas3D Examples

    \brief Examples for the QtCanvas3D.

    For some code examples, see one of the QtCanvas3D examples:

    \section1 Examples
*/

/*!
    \group qtcanvas3d-getting-started
    \title QtCanvas3D Getting Started

    \section1 Building QtCanvas3D

    To build the QtCanvas3D module from source code, set up a command prompt
    with an environment for building Qt applications, navigate to the directory containing
    \c {qtcanvas3d.pro}, and configure the project with qmake:
    \code
    qmake
    \endcode

    After running qmake, build the project with make:
    \table
    \header
      \li OS                       \li Make command
    \row
      \li Linux                    \li make
    \row
      \li Windows (MinGw)          \li mingw32-make
    \row
      \li Windows (MSVC)           \li nmake
    \row
      \li OSX                      \li make
    \endtable

    The above generates the default makefiles for your configuration, which is typically
    the release build if you are using precompiled binary Qt distribution. To build both debug
    and release, or one specifically, use one of the following qmake lines instead.

    For debug builds:
    \code
    qmake CONFIG+=debug
    make
    \endcode
    or
    \code
    qmake CONFIG+=debug_and_release
    make debug
    \endcode

    For release builds:
    \code
    qmake CONFIG+=release
    make
    \endcode
    or
    \code
    qmake CONFIG+=debug_and_release
    make release
    \endcode

    For both builds (Windows/Mac only):
    \code
    qmake CONFIG+="debug_and_release build_all"
    make
    \endcode

    After building, install the module to your Qt directory:
    \code
    make install
    \endcode

    If you want to uninstall the module:
    \code
    make uninstall
    \endcode

    To build a statically linked version of the QtCanvas3D module, give the following
    commands:

    \code
    qmake CONFIG+=static
    make
    make install
    \endcode

    \section1 Running examples

    QtCanvas3D examples are found under the \c examples subdirectory. To build and run a
    single example, in this case \c{interaction}, navigate to the example directory and enter the
    following commands:

    \code
    qmake
    make
    ./interaction
    \endcode

    \note On some platforms, such as Windows, the executable can be generated under debug or
    release folders, depending on your build.

    \section1 A Basic Example

    For a simple Canvas3D example see the \l {Lit and Textured Cube Example}.

    For all the QtCanvas3D examples, check out \l {QtCanvas3D Examples}
*/

/*!
    \group qtcanvas3d-logging
    \title QtCanvas3D Logging

    \brief The logging features in QtCanvas3D.

    Logging in QtCanvas3D uses the Qt categorized logging. The following categories are supported:

    \list
    \li "qt.canvas3d.info.debug" Logs on high level information about the OpenGL driver.
    \li "qt.canvas3d.rendering.debug" Logs all the method calls in QtCanvas3D.
    \li "qt.canvas3d.rendering.warning" Logs all warnings on from QtCanvas3D internal verifications
    that happen before a OpenGL method call is made to the actual graphics driver.
    \li "qt.canvas3d.glerrors.debug" Logs all the OpenGL driver level errors. This entails calling
        \c{glGetError()} after each OpenGL driver call and this will cause a negative performance
        hit. Please use only when necessary to find root causes of rendering errors.
    \endlist
*/
